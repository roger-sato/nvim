[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
hook_add = '''
let g:gruvbox_contrast_dark = 'hard'
'''
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'ayu-theme/ayu-vim'

[[plugins]]
hook_add = '''
let g:highlightedyank_highlight_duration = 150
'''
repo = 'machakann/vim-highlightedyank'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
hook_add = '''
	map <Leader><Leader>f <Plug>(easymotion-bd-f)
	nmap <Leader><Leader>f <Plug>(easymotion-overwin-f)
	map <Leader><Leader>t <Plug>(easymotion-bd-t)
	nmap <Leader><Leader>t <Plug>(easymotion-overwin-t)
	map <Leader><Leader>s <Plug>(easymotion-bd-f2)
	nmap <Leader><Leader>s <Plug>(easymotion-overwin-f2)
	map <Leader><Leader>/ <Plug>(easymotion-sn)
	omap <Leader><Leader>/ <Plug>(easymotion-tn)
	map <Leader><Leader>h <Plug>(easymotion-linebackward)
	map <Leader><Leader>l <Plug>(easymotion-lineforward)
	map <Leader><Leader>j <Plug>(easymotion-j)
map <Leader><Leader>k <Plug>(easymotion-k)
	let g:EasyMotion_smartcase = 1
	'''
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
hook_add = '''
	nmap s <Plug>Sneak_s
	nmap S <Plug>Sneak_S
	'''
repo = 'justinmk/vim-sneak'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_start_key = '<leader>E'
'''

[[plugins]]
repo = 'vim-scripts/ReplaceWithRegister'

# [[plugins]]
# repo = 'zefei/vim-wintabs'
# hook_add = ''' map <C-n> <Plug>(wintabs_previous)
#   map <C-p> <Plug>(wintabs_next)
#   map <C-q> <Plug>(wintabs_close)
#   map <C-T>u <Plug>(wintabs_undo)
#   map <C-T><C-o> <Plug>(wintabs_only)
# '''

[[plugins]]
repo = 'zefei/vim-wintabs-powerline'

[[plugins]]
repo = 'wellle/targets.vim'

[[plugins]]
hook_add = '''
	nmap <leader>gs <cmd>Gina status<cr>
	'''
repo = 'lambdalisue/gina.vim'

[[plugins]]
hook_add = '''
	nmap <leader>gl <Plug>(GitGutterNextHunk)
	nmap <leader>gh <Plug>(GitGutterPrevHunk)
	nmap <leader>gt <Plug>(GitGutterLineHighlightsToggle)
	nmap <leader>gd <Plug>(GitGutterPreviewHunk)
	highlight GitGutterAdd ctermfg=green
	highlight GitGutterChange ctermfg=blue
	highlight GitGutterDelete ctermfg=red
	set updatetime=250
	'''
repo = 'airblade/vim-gitgutter'

[[plugins]]
hook_add = '''
	nmap <Leader>e <cmd>Fern . -toggle -reveal=% -drawer<cr>
	let g:fern#default_hidden=1
	'''
repo = 'lambdalisue/fern.vim'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
hook_add = '''
  let g:fern#renderer = 'nerdfont'
'''
repo = 'lambdalisue/fern-renderer-nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = 'ap/vim-buftabline'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
hook_add = '''
  augroup my-glyph-palette
    autocmd! *
    autocmd FileType fern call glyph_palette#apply()
    autocmd FileType nerdtree,startify call glyph_palette#apply()
  augroup END
'''
repo = 'lambdalisue/glyph-palette.vim'

[[plugins]]
repo = 'tomasiser/vim-code-dark'

[[plugins]]
repo = 'chr4/nginx.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
function! FZGrep(query, fullscreen)
  let command_fmt = 'rg --column --line-number --no-heading --color=always --smart-case -- %s || true'
  let initial_command = printf(command_fmt, shellescape(a:query))
  let reload_command = printf(command_fmt, '{q}')
  let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
  call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
endfunction
command! -nargs=* -bang RG call FZGrep(<q-args>, <bang>0)

  command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
    \   fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:50%:wrap'))
'''

# [[plugins]]
# repo = 'prabirshrestha/asyncomplete.vim'

# [[plugins]]
# repo = 'prabirshrestha/asyncomplete-lsp.vim'

# [[plugins]]
# repo = 'prabirshrestha/vim-lsp'

# [[plugins]]
# repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'SirVer/ultisnips'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'kamykn/spelunker.vim'

# [[plugins]]
# repo = 'thomasfaingnaert/vim-lsp-snippets'

# [[plugins]]
# repo = 'thomasfaingnaert/vim-lsp-ultisnips'

[[plugins]]
repo = 'Shougo/junkfile.vim'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

# [[plugins]]
# repo = 'mattn/vim-goimports'

# [[plugins]]
# repo = 'rust-lang/rust.vim'


[[plugins]]
repo = 'williamboman/nvim-lsp-installer'

# [[plugins]]
# repo = 'williamboman/mason.nvim'

# [[plugins]]
# repo = 'williamboman/mason-lspconfig.nvim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
depends = ['nvim-lsp-installer']

[[plugins]]
hook_add = '''
  call ddc#custom#patch_global('sources', ['nvim-lsp', 'around'])
  call ddc#custom#patch_global('sourceOptions', {
        \ '_': {
        \   'matchers': ['matcher_head'],
	\  },
        \ 'around': {
        \   'mark': 'around' },
        \ 'nvim-lsp': {
        \   'mark': 'lsp',
        \   'forceCompletionPattern': '\.\w*|:\w*|->\w*' },
        \ })

  inoremap <silent><expr> <TAB>
  \ ddc#map#pum_visible() ? '<C-n>' :
  \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
  \ '<TAB>' : ddc#map#manual_complete()

  set completeopt-=preview
  inoremap <expr><S-TAB>  ddc#map#pum_visible() ? '<C-p>' : '<C-h>'
  call ddc#enable()
	'''
depends = ['denops.vim','nvim-lspconfig']
repo = 'Shougo/ddc.vim'

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = ['denops.vim']
hook_add = '''
call signature_help#enable()
let g:signature_help_config = {
	      \ 'border': v:true,
	      \ 'maxWidth': 80,
	      \ 'maxHeight': 30,
	      \ 'style': "full",
	      \ 'onTriggerChar': v:false,
	      \ 'multiLabel': v:false,
	      \ 'fallbackToBelow': v:true,
	      \ }
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
depends = ['denops.vim']
hook_add = '''
call popup_preview#enable()
let g:popup_preview_config = {
	      \ 'maxWidth': 60,
	      \ 'maxHeight': 30,
	      \ }
'''

